local signs_table = require "scripts.signs"
local currency_table = require "scripts.currency"
local color_change_time = 2
local shop_open = false

function init(self)
	gui.set_enabled(gui.get_node("sounds"), false)
	gui.set_enabled(gui.get_node("menu"), false)
	gui.set_enabled(gui.get_node("signs_panel"), false)
	sound.play("/music#sound")
	msg.post(".", "acquire_input_focus")
	gui.animate(gui.get_node("box"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 60, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	for i = 0, 8 do
		gui.animate(gui.get_node("star"..i), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 60, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	end
	change_money_amount(0)
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
		
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		if gui.pick_node(gui.get_node("music_sound"), action.x, action.y) then
			pos = slider_position(action, "slider1")
			len = gui.get_size(gui.get_node("music_sound")).x
			gui.set_position(gui.get_node("slider1"), pos)
			sound.set_gain("/music#sound", (pos.x + len / 2) / len)
		elseif gui.pick_node(gui.get_node("game_sounds"), action.x, action.y) then
			pos = slider_position(action, "slider2")
			gui.set_position(gui.get_node("slider2"), pos)
		elseif gui.pick_node(gui.get_node("general_sound"), action.x, action.y) then
			pos = slider_position(action, "slider3")
			gui.set_position(gui.get_node("slider3"), pos)
		end
		if action.pressed then
			if gui.pick_node(gui.get_node("start"), action.x, action.y) then
				gui.set_enabled(gui.get_node("box"), false)
				gui.set_enabled(gui.get_node("menu"), true)
				msg.post("/go#main", "start")
			elseif gui.pick_node(gui.get_node("cross"), action.x, action.y) then
				gui.set_enabled(gui.get_node("sounds"), false)
			elseif gui.pick_node(gui.get_node("options"), action.x, action.y) or gui.pick_node(gui.get_node("wrench"), action.x, action.y) then
				gui.set_enabled(gui.get_node("sounds"), true)
			elseif gui.pick_node(gui.get_node("cart"), action.x, action.y) then
				open_cart(action)
			elseif gui.pick_node(gui.get_node("exit"), action.x, action.y) then
				close_sighns_panel()
			else
				local sign =  if_click_on_sign(action)
				if sign ~= nil then
					if shop_open then
						buy_sign(sign)
					end
				end
			end
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end

change_time = function()
	time_before_end = time_before_end - 1
	local time_string = ""
	if (time_before_end - time_before_end % 60) / 60 < 10 then
		time_string = time_string .. "0"
	end
	time_string = time_string .. tostring((time_before_end - time_before_end % 60) / 60) .. ":"
	if time_before_end % 60 < 10 then
		time_string = time_string .. "0"
	end
	time_string = time_string .. tostring(time_before_end % 60)
	gui.set_text(time_text, time_string)
end

function slider_position(action, slider)
	local sound_menu = gui.get_node("sounds")
	local line = gui.get_node(slider)
	x = action.x - gui.get_position(sound_menu).x
	return vmath.vector3(x, 0, 0)
end

function open_cart(action)
	set_price()
	shop_open = true
	panel = gui.get_node("signs_panel")
	gui.set_enabled(panel, true)
	color = gui.get_color(panel)
	color.w = 1
	gui.set_color(panel, color)
	gui.set_position(panel, vmath.vector3(217, 887, 1))
	change_alpha()
end

function close_sighns_panel()
	shop_open = false
	return_alpha()
	panel = gui.get_node("signs_panel")
	gui.set_enabled(panel, false)
end

function change_alpha()
	cash = currency_table.cash()
	local not_available_signs = signs_table.notAvailable(cash)
	for i = 1, #not_available_signs do
		node = gui.get_node(not_available_signs[i])
		color = gui.get_color(node)
		color.w = 0.4
		gui.set_color(node, color)
	end
end

function return_alpha()
	local signs = signs_table.allSigns()
	for i = 1, #signs do
		node = gui.get_node(signs[i])
		color = gui.get_color(node)
		color.w = 1
		gui.set_color(node, color)
	end
end

function change_money_amount(price)
	currency_table.change_money(price)
	local money = gui.get_node('money_amount')
	local amount = currency_table.cash()
	gui.set_text(money, amount)
end

function if_click_on_sign(action)
	local signs = signs_table.allSigns()
	for i = 1, #signs do
		node = gui.get_node(signs[i])
		if gui.pick_node(node, action.x, action.y) then
			return signs[i]
		end
	end
	return nil
end

function buy_sign(type)
	price = signs_table.price_by_type(type)
	if currency_table.cash() >= price then
		signs_table.buySign(type)
		change_money_amount(-price)
		change_alpha()
	end
end

function set_price()
	local signs = signs_table.allSigns()
	local price = signs_table.get_price_table()
	for i = 1, #signs do
		node = gui.get_node(signs[i]..'_text')
		gui.set_text(node, price[i])
	end
end

function set_quantity()
	-- TO DO set money lables
end